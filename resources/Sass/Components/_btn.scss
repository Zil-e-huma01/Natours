.btn{
    &,
    &:link,
    &:visited {
       text-transform: uppercase;
       text-decoration: none;
       padding: 1.5rem 4rem; /* if we write one value it is applied to everywhere top right bottom and left but if we write 2 valuues
              the first one is applied to top and bottom and the next one is for left and right and if we write 4 numbers
              the first one is top second right third bottom and forth one is left*/
       display: inline-block; /* do use this when giving some padding, margins to an object it is treated as a text*/
       border-radius: 10rem; /* here u can use 200 or 500 but such bigger values will give the same result*/
       transform: all 0.2s; /* we define that we need a transition in initial state and then explain the  transition 
              in part where we want it*/
       position: relative; 
       font-size: $default-font-size;/* for after pseudo class to work*/

       //change for the <button> element and also we add &, with link and visited for this element beacuse for it link and visited stated do not vork
       border: none;
       cursor: pointer;
    
    }
    &:hover{
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, 0.24);  /* first value for shadow in x direction 2nd in y direction and last is to specify blury effect*/

        &::after{
            transform: scaleX(1.4) scaleY(1.6);       /* scale increase te size of element slace 2 means double size*/
            opacity: 0;                               /* to make someting fade out*/
        }
    }
    &:active,
    &:focus{                                    /*when we lick the btn*/
        transform: translateY(.1rem);           /* in relation to the link state not hover state*/
        box-shadow: 0 .5rem 1rem rgba($color-black, 0.24);
    }
    &--white{
        background-color: $color-white;
        color: $color-grey-dark;
        &::after{
            background-color: $color-white;
        }
    }

    &--green{
        
        background-color: $color-primary;
        color: $color-white;
        &::after{
            background-color: $color-primary;
        }
    }

    &::after{
        content: ""; /* we always have to difine content and display for this after pseudo class no matter what we want to do*/
        display: inline-block;
        height: 100%; /* this pseudo elementt act as child of actual btn element so 100% means exactly same*/
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1; /* it defines the position when an element is behind another element*/
        transition: all 0.4s;

    }
    
    
    &--animated{
        animation: moveInBtn .5s ease-out o,75s; /* the last one is annimation delay*/
        animation-fill-mode: backwards; /* it applies the styles of 0% */
    }

}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all 0.2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, 0.15);
        transform: translateY(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, 0.15);
        transform: translateY(0);
    }
}